import numpy as np
import cv2


pixel_points = np.array([
    [256, 346], [803, 339], [1108, 403],  # 点1-3
    [328, 605], [841, 472], [1631, 549],  # 点4-6
    [587, 336], [365, 410], [1007, 126]   # 点7-9
], dtype=np.float32)

'''world_matrices = [
    np.array([[-0.999994410527070, -0.00293030958842268, -0.00161003115919154, -0.0695554172689766], [-0.00135576315449177, 0.795558684103406, -0.605875021810543, 0.321175020945753], [0.00305627565616915, -0.605869452467587, -0.795558210155448, 0.342964983441478], [0, 0, 0, 1]]),
    np.array([[-0.994162012626472, 0.107696475432043, 0.00658497000731462, -0.0893782287139789], [0.00214441812531634, 0.0807394622418475, -0.996732933492117, 0.318353806443962], [-0.107876290821411, -0.990899898282573, -0.0804990525546833, 0.270390656231468], [0, 0, 0, 1]]),
    np.array([[-0.999738080372410, 0.00828746992004797, -0.0213328032760331, -0.0458011885167919], [0.0228569408684517, 0.314576645763503, -0.948956845275021, 0.317430529848032], [-0.00115364961133319, -0.949195897474545, -0.314683678175508, 0.421112068664580], [0, 0, 0, 1]]),
    np.array([[-0.988744409745116, 0.149429409144436, -0.00743934678092123, -0.149275387741751], [0.00198937012637646, -0.0365883280554586, -0.999328442833789, 0.308094389230209], [-0.149601252014421, -0.988095210965447, 0.0358792344242010, 0.211220628606702], [0, 0, 0, 1]]),
    np.array([[-0.997836577678232, 0.0645263199546482, -0.0125904043026213, -0.148306668457168], [0.0109694276704002, -0.0254141840510696, -0.999616822040127, 0.330422964956227], [-0.0648215697432339, -0.997592338223449, 0.0246513856384244, 0.299947605648766], [0, 0, 0, 1]]),
    np.array([[-0.855554476003096, 0.517035893948494, 0.0264655050952995, -0.218438889717552], [2.37996990379103e-5, 0.0511593312263417, -0.998690503740797, 0.318663647207191], [-0.517712794920738, -0.854433500746170, -0.0437819001186894, 0.355248990539590], [0, 0, 0, 1]]),
    np.array([[-0.576744402939475, 0.816811002728548, 0.0136264265151322, -0.309591959430981], [-0.000392463170707918, 0.0164031106135670, -0.999865382906548, 0.326320137296884], [-0.816924561786857, -0.576672111154842, -0.00913983400117192, 0.227138472851406], [0, 0, 0, 1]]),
    np.array([[-0.608007936874504, 0.793411431296376, 0.0287167091750601, -0.291061557752623], [-0.00341459478896174, 0.0335566984269886, -0.999430982376025, 0.304939523059998], [-0.793923604158509, -0.607760025568411, -0.0176935604401060, 0.359498630735459], [0, 0, 0, 1]]),
    np.array([[-0.584342333871084, 0.809117512561940, 0.0622325293690863, -0.357061939806457], [-0.00193521601058933, 0.0752979753918493, -0.997159199847688, 0.290385170338796], [-0.811504954874021, -0.582802767467235, -0.0424339775114826, 0.340213207834396], [0, 0, 0, 1]])

]'''
world_matrices = np.array(
    [
        [-0.144628423553283, 0.188241935148683, 0.151395481699617],
        [-0.227306695023878, 0.195271510895409, 0.151212845561304],
        [-0.277041040631451, 0.185682389283326, 0.152563837282460],
        [-0.0623243077908695, 0.279526197243371, 0.314126074452490],
        [-0.223748478694264, 0.277639535552372, 0.252963373921649],
        [-0.406839013591401, 0.220528302069966, 0.231140096157862],
        [-0.0805664550165712, 0.499192958106046, 0.365833288545123],
        [-0.216911063710307, 0.443569727563565, 0.367954014423601],
        [-0.279560472280077, 0.499716663413270, 0.264923560360851]



    ]
)


def nine_point_calibration(pixel_points, robot_points):
    """
    九点标定求解投影矩阵
    :param pixel_points: 像素坐标列表，形状为(N, 2)
    :param robot_points: 机械臂坐标列表，形状为(N, 3)
    :return: 3x4投影矩阵
    """
    N = len(pixel_points)
    A = []
    for i in range(N):
        x, y, z = robot_points[i]
        u, v = pixel_points[i]
        A.append([x, y, z, 1, 0, 0, 0, 0, -u * x, -u * y, -u * z, -u])
        A.append([0, 0, 0, 0, x, y, z, 1, -v * x, -v * y, -v * z, -v])
    A = np.array(A)

    _, _, Vt = np.linalg.svd(A)
    M = Vt[-1, :].reshape(3, 4)

    return M


projection_matrix = nine_point_calibration(pixel_points, world_matrices)

print("投影矩阵 (3x4):")
print(projection_matrix)

